@commands.command(name="load",hidden=True)
@commands.is_owner()
async def load(self, *, module : str):
    """Loads a module."""
    name = "load"
    try:
        bot.load_extension(module)
    except Exception as Exc:
        logger.error(f"Uncaught Exception in Module : `{name}`, ErrorType : `{type(Exc)}` : {Exc}")
        await ctx.send("Error Encountered ; Check Log files")
    else:
        await ctx.send('\N{OK HAND SIGN}')

@commands.command(name="unload",hidden=True)
@commands.is_owner()
async def unload(self,ctx, *, module : str):
    """Unloads a module."""
    name = "unload"
    try:
        bot.unload_extension(module)
    except Exception as Exc:
        logger.error(f"Uncaught Exception in Module : `{name}`, ErrorType : `{type(Exc)}` : {Exc}")
        await ctx.send("Error Encountered ; Check Log files")
    else:
        await self.bot.say('\N{OK HAND SIGN}')

@commands.command(name='reload', hidden=True)
@commands.is_owner()
async def reload(self,ctx, *, module : str):
    """Reloads a module."""
    try:
        bot.unload_extension(module)
        bot.load_extension(module)
    except Exception as Exc:
        logger.error(f"Uncaught Exception in Module : `{name}`, ErrorType : `{type(Exc)}` : {Exc}")
        await ctx.send("Error Encountered ; Check Log files")
    else:
        await ctx.send('\N{OK HAND SIGN}')
